// stardate 2263.02
// User Story: I can type text to be translated into a text area.
// User Story: I can see a preview of the translated output that is updated as I type.
const imgUFP =
  "https://engineerwithoutfear.github.io/web_dev/FreeCodeCamp/galactic-translator-react/css/UFP_Emblem.svg";

const InputPanel = (props) =>
  <div className='panel-input markdown'>
    <textarea
      placeholder={props.placeholderMarkdown}
      onChange={props.translateInput}
      value={props.text}
      autoFocus
    />
  </div>;

const OutputPanel = props =>
  <div className={'panel-output'}>
    <div className={props.placeholderScreensaver ? 'screensaver-visible' : 'screensaver-invisible'}>
      <img className="container-ufp" src={props.screensaverURL} />
    </div>
    <div className="output-text">
      {" "}
      <div className={props.currentLanguage}>
        <div dangerouslySetInnerHTML={{ __html: marked(props.text) }} />
      </div>
    </div>
  </div>;

const Header = () =>
  <header>
    <div className="header-text">
      <span className="header-text-1 insets">COMMAND CONSOLE: 09182</span>
      <span className="header-text-2">USER: S 179-276 SP</span>
    </div>
  </header>;

const LanguageMenu = props =>
  <div className="language-menu" onClick={props.onClick}>
    <div className="language-select">
      <div className="language-select-text">
        <span className="language-select-text-1 insets">
          TRANSLATION LANGUAGE
        </span>
      </div>
    </div>
    <div className="language-current">
      <div className="language-current-text">
        <span className="language-current-text-1 insets">{props.currentLanguage}</span>
      </div>
    </div>
  </div>;

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      placeholderMarkdown: "Terminal ready.",
      placeholderScreensaver: true,
      screensaverURL: imgUFP,
      languages: [
        "vulcan",
        "romulan",
        "klingon",
        "borg",
        "ferengi",
        "dominion"
      ],
      index: 0,
      currentLanguage: "",
      text: "",
      translatedText: ""
    };
    this.translateInput = this.translateInput.bind(this);
    this.selectLanguage = this.selectLanguage.bind(this);
    this.updateLanguage = this.updateLanguage.bind(this);
  }
  componentDidMount() {
    this.selectLanguage();
  }
  translateInput(e) {
    this.setState({
      text: e.target.value,
      placeholderScreensaver: false
    });
  }
  selectLanguage() {
    this.setState({ currentLanguage: this.state.languages[this.state.index] });
  }
  updateLanguage() {
    this.setState(
      {
        index: this.state.index >= this.state.languages.length - 1
          ? 0
          : this.state.index + 1
      },
      this.selectLanguage
    );
  }

  render() {
    return (
      <div className="container-island">
        <Header />
        <div className="container-display ">
          <InputPanel
            placeholderMarkdown={this.state.placeholderMarkdown}
            translateInput={this.translateInput}
            value={this.state.text}
          />
          <OutputPanel
            placeholderScreensaver={this.state.placeholderScreensaver}
            text={this.state.text}
            currentLanguage={this.state.currentLanguage}
            screensaverURL={this.state.screensaverURL}
          />
        </div>
        <LanguageMenu
          onClick={this.updateLanguage}
          currentLanguage={this.state.currentLanguage}
        />
      </div>
    );
  }
}

ReactDOM.render(<App />, document.getElementById("root"));
